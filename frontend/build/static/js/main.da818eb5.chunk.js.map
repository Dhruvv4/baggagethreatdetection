{"version":3,"sources":["components/result/ResultImage.js","components/predict/Predict.js","App.js","reportWebVitals.js","index.js"],"names":["ResultImage","imgUrl","className","src","alt","Predict","useState","image","setImage","canShow","setCanShow","csvData","setCsvData","csvLinkRef","useRef","type","id","accept","onChange","e","target","files","length","document","getElementById","innerHTML","name","htmlFor","onClick","imageFile","xmlFile","formData","FormData","append","axios","post","responseType","then","res","URL","createObjectURL","data","error","console","log","get","current","link","click","filename","ref","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4PAYeA,EATY,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAC3B,OACE,gCACE,wCACA,qBAAKC,UAAU,kBAAkBC,IAAKF,EAAQG,IAAI,S,wBC2HzCC,EA7HQ,WACrB,IAD2B,EA8CDC,mBAAS,IA9CR,mBA8CpBC,EA9CoB,KA8CbC,EA9Ca,OA+CGF,oBAAS,GA/CZ,mBA+CpBG,EA/CoB,KA+CXC,EA/CW,OAgDGJ,mBAAS,IAhDZ,mBAgDpBK,EAhDoB,KAgDXC,EAhDW,KAiDrBC,EAAaC,mBAEnB,OACE,sBAAKZ,UAAU,0CAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,8CACA,iCACE,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,cAAf,UACE,uBACEa,KAAK,OACLb,UAAU,oBACVc,GAAG,YACHC,OAAO,aACPC,SAvCW,SAACC,GAAO,IAAD,KACzB,OAADA,QAAC,IAADA,GAAA,UAAAA,EAAGC,cAAH,mBAAWC,aAAX,eAAkBC,QAAS,IAC7BC,SAASC,eAAe,kBAAkBC,UACxCN,EAAEC,OAAOC,MAAM,GAAGK,SAsCZ,uBACEV,GAAG,iBACHd,UAAU,oBACVyB,QAAQ,aAHV,oCASJ,qBAAKzB,UAAU,aAAf,SACE,sBAAKA,UAAU,cAAf,UACE,uBACEa,KAAK,OACLb,UAAU,oBACVc,GAAG,UACHC,OAAO,OACPC,SAlDS,SAACC,GAAO,IAAD,KACvB,OAADA,QAAC,IAADA,GAAA,UAAAA,EAAGC,cAAH,mBAAWC,aAAX,eAAkBC,QAAS,IAC7BC,SAASC,eAAe,gBAAgBC,UACtCN,EAAEC,OAAOC,MAAM,GAAGK,SAiDZ,uBACEV,GAAG,eACHd,UAAU,oBACVyB,QAAQ,aAHV,kCASJ,sBAAKzB,UAAU,iCAAf,UACE,wBACEa,KAAK,SACLb,UAAU,sBACV0B,QA/FK,WACf,IAAMC,EAAYN,SAASC,eAAe,aAAaH,MAAM,GACvDS,EAAUP,SAASC,eAAe,WAAWH,MAAM,GACzD,IAAKQ,IAAcC,EACjB,OAAO,KAET,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,UAAWJ,GAC3BE,EAASE,OAAO,UAAWH,GAG3BI,IAAMC,KADM,gCACIJ,EAAU,CAACK,aAAc,SAASC,MAChD,SAACC,GACC,IAAMrC,EAASsC,IAAIC,gBAAgBF,EAAIG,MACvCjC,EAASP,GACTS,GAAW,MAEb,SAACgC,GACCC,QAAQC,IAAIF,OA0ER,oBAOA,wBACE3B,KAAK,SACLb,UAAU,sBACV0B,QAjEO,SAACT,GAElBe,IAAMW,IADM,gCACGR,MAAK,SAACC,GACnB1B,EAAW0B,EAAIG,MACf5B,EAAWiC,QAAQC,KAAKC,YA0DlB,kCAUN,qBAAK9C,UAAWO,EAAU,MAAQ,KAClC,qBAAKP,UAAU,kBAAf,SACGO,GAAW,cAAC,EAAD,CAAaR,OAAQM,MAEnC,cAAC,UAAD,CACES,GAAG,UACHiC,SAAU,aACV7B,OAAO,QACPqB,KAAM9B,EACNuC,IAAKrC,QChHEsC,MATf,WACE,OACE,sBAAKjD,UAAU,cAAf,UACE,oBAAIA,UAAU,cAAd,oBACA,cAAC,EAAD,QCKSkD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvC,SAASC,eAAe,SAM1B4B,M","file":"static/js/main.da818eb5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ResultImage.css\";\n\nexport const ResultImage = ({imgUrl}) => {\n  return (\n    <div>\n      <h1>Result</h1>\n      <img className=\"detected__image\" src={imgUrl} alt=\"\" />\n    </div>\n  );\n};\n\nexport default ResultImage;\n","import React, {useState, useRef} from \"react\";\nimport ResultImage from \"../result/ResultImage\";\nimport axios from \"axios\";\nimport {CSVLink} from \"react-csv\";\n\nexport const Predict = () => {\n  const onSubmit = () => {\n    const imageFile = document.getElementById(\"imageFile\").files[0];\n    const xmlFile = document.getElementById(\"xmlFile\").files[0];\n    if (!imageFile || !xmlFile) {\n      return null;\n    }\n    const formData = new FormData();\n    formData.append(\"imgFile\", imageFile);\n    formData.append(\"xmlFile\", xmlFile);\n\n    const url = \"http://localhost:5000/predict\";\n    axios.post(url, formData, {responseType: \"blob\"}).then(\n      (res) => {\n        const imgUrl = URL.createObjectURL(res.data);\n        setImage(imgUrl);\n        setCanShow(true);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  };\n\n  const onImageFileEvent = (e) => {\n    if (e?.target?.files?.length > 0) {\n      document.getElementById(\"imageInputText\").innerHTML =\n        e.target.files[0].name;\n    }\n  };\n\n  const onXMLFileEvent = (e) => {\n    if (e?.target?.files?.length > 0) {\n      document.getElementById(\"xmlInputText\").innerHTML =\n        e.target.files[0].name;\n    }\n  };\n\n  const exportData = (e) => {\n    const url = \"http://localhost:5000/export\";\n    axios.get(url).then((res) => {\n      setCsvData(res.data);\n      csvLinkRef.current.link.click();\n    });\n  };\n\n  const [image, setImage] = useState(\"\");\n  const [canShow, setCanShow] = useState(false);\n  const [csvData, setCsvData] = useState(\"\");\n  const csvLinkRef = useRef();\n\n  return (\n    <div className=\"container d-flex justify-content-center\">\n      <div className=\"login__section\">\n        <h1>Upload Files</h1>\n        <form>\n          <div className=\"form-group\">\n            <div className=\"custom-file\">\n              <input\n                type=\"file\"\n                className=\"custom-file-input\"\n                id=\"imageFile\"\n                accept=\".jpg,.jpeg\"\n                onChange={onImageFileEvent}\n              />\n              <label\n                id=\"imageInputText\"\n                className=\"custom-file-label\"\n                htmlFor=\"customFile\"\n              >\n                Choose Image file\n              </label>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"custom-file\">\n              <input\n                type=\"file\"\n                className=\"custom-file-input\"\n                id=\"xmlFile\"\n                accept=\".xml\"\n                onChange={onXMLFileEvent}\n              />\n              <label\n                id=\"xmlInputText\"\n                className=\"custom-file-label\"\n                htmlFor=\"customFile\"\n              >\n                Choose XML file\n              </label>\n            </div>\n          </div>\n          <div className=\"d-flex justify-content-between\">\n            <button\n              type=\"button\"\n              className=\"btn btn-info btn-sm\"\n              onClick={onSubmit}\n            >\n              Detect\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-sm btn-info\"\n              onClick={exportData}\n            >\n              Export Data\n            </button>\n          </div>\n        </form>\n      </div>\n      <div className={canShow ? \"m-5\" : \"\"}></div>\n      <div className=\"result__section\">\n        {canShow && <ResultImage imgUrl={image} />}\n      </div>\n      <CSVLink\n        id=\"csvLink\"\n        filename={\"export.csv\"}\n        target=\"_self\"\n        data={csvData}\n        ref={csvLinkRef}\n      ></CSVLink>\n    </div>\n  );\n};\n\nexport default Predict;\n","import \"./App.css\";\nimport Predict from \"./components/predict/Predict\";\n\nfunction App() {\n  return (\n    <div className=\"app bg-dark\">\n      <h1 className=\"text-center\">ABC AI</h1>\n      <Predict></Predict>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// require(\"dotenv\").config('');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}